{
  "Język Java": {
    "Co to jest klasa abstrakcyjna i interfejs w Javie": "Klasa abstrakcyjna to klasa ze słowem kluczowym abstract, która może zawierać zarówno metody abstrakcyjne, czyli bez implementacji, jak i metody z implementacją. Może też mieć pola danych i konstruktor. Nie można tworzyć jej obiektów, a jej podklasy muszą implementować metody abstrakcyjne. Interfejs to klasa ze słowem kluczowym interface i jest to zbiór metod abstrakcyjnych lub które mogą być zaimplementowane, ale tylko ze słowem kluczowym static lub default. Nie może mieć konstruktora ani pól poza static final. Klasa może implementować wiele interfejsów, ale dziedziczyć tylko jedną klasę abstrakcyjną.",
    "Proszę omówić dostępne sposoby synchronizacji wątków w Javie": "Słowo kluczowe synchronized. Na metodzie statycznej blokuje wszystkie obiekty, na metodzie zwykłej blokuje na this, czyli wszystko w ramach jednego obiektu, synchronized na wybranym innym obiekcie blokuje wszystko inne co ma synchronized na tym samym obiekcie. Synchronized jest reentrant, czyli jeden wątek z założoną blokadą na A, może wywołać inną metodę z tą samą blokadą B bez spowodowania zakleszczenia. Synchronized gwarantuje też widoczność wartości zmiennych, na których operuje, czyli zmiany dokonane przez inne wątki są widoczne. Jak wątek próbuje wejść do zajętej sekcji synchronized, to przechodzi w stan blocked i czeka aż będzie wolna. Jest też trójka metod wait, notify i notifyAll. Jest też ReentrantLock, który zwalania zasób po zwolnieniu go tyle razy, ile razy została założona blokada, ale przy użyciu metody tryLock nie blokuje wątku, jeśli jest zajęty blok kodu, tylko może robić coś innego. Jest też słowo kluczowe volatile, które gwarantuje widoczność. Jest też AtomicInteger. Jest też metoda join do czekania na wykonanie innego wątku. Java jest bogatym językiem, więc są też inne biblioteki.",
    "Czy Java jest językiem kompilowanym czy interpretowanym?": "Java jest językiem pośrednim. Kod źródłowy jest najpierw kompilowany do niezależnego od platformy bytecode'u, który jest przy uruchomieniu interpretowany lub kompilowany just-in-time (JIT) przez maszynę wirtualną JVM podczas wykonywania programu. Bytecode umożliwia wyjątkowo łatwą w porównaniu do innych języków dekompilację, legalną bądź nie i też dlatego może powstawać w Minecraft wiele modyfikacji przez zmianę bytecodu kodu źródłowego gry, mimo tego, że w domyśle nie jest on open source.",
    "Co to jest JDBC?": "JDBC to skrót od Java Database Connectivity. Pozwala aplikacjom w Java komunikować się z relacyjnymi bazami danych, w tym na wykonywanie zapytań SQL i odczytywanie wyników. JDBC stanowi abstrakcję nad różnymi systemami baz danych, dzięki czemu programista może pisać kod niezależny od konkretnego silnika bazy danych. Komponenty to klasy DriverManager, Connection, Statement, ResultSet.",
    "Co to jest serializacja? Jak zrealizować serializację w Javie?": "Serializacja w Javie to proces zamiany obiektu na strumień bajtów, co pozwala na jego zapis do pliku lub przesłanie przez sieć, a następnie odtworzenie tego obiektu przez deserializację. Aby obiekt mógł być zserializowany, klasa musi implementować interfejs Serializable. Serializację realizuje się za pomocą klas ObjectOutputStream z metodą writeObject i ObjectInputStream z metodą readObject, które zapisują i odczytują obiekty ze strumieni danych."
  },
  "Fizyka": {
    "Skąd biorą się równania różniczkowe zwyczajne w fizyce?": "Równania różniczkowe to takie, w którym badamy różnicę, czyli zmianę, a zwyczajne to takie, w których badany jest wynik zmian jednej zmiennej niezależnej. Pojawiają się jako matematyczny opis praw przyrody, które wiążą wielkości fizyczne z ich zmianą względem jednej zmiennej, najczęściej czasu. Np. siła = masa razy przyspieszenie, gdzie przyspieszenie to druga pochodna położenia po czasie. Jeśli znamy wektor siły i wiemy, że np. w chwili t0 ciało było w spoczynku, to po rozwiązaniu dla położenia od t, możemy powiedzieć, gdzie ciało znajduje się w dowolnym czasie.",
    "Przykłady równań różniczkowych cząstkowych w fizyce": "Równania różniczkowe to takie, w którym badamy różnicę, czyli zmianę, a cząstkowe to takie, w których badany jest wynik zmian więcej, niż jednej zmiennej niezależnej. Przykłady to równanie przewodnictwa cieplnego, które opisuje rozchodzenie się ciepła w materiale; równanie falowe, które opisuje rozchodzenie się fal dźwiękowych czy świetlnych; oraz równania Laplace'a i Poissona, używane m.in. w elektrostatyce i teorii potencjału, by opisać pola elektryczne i grawitacyjne. Np. równanie Laplace'a to 0 = dywergencja gradientu funkcji = suma po i od 1 do n po drugich pochodnych f po x i, a Poisson, to zamiast 0 f od x.",
    "Podać najważniejsze zasady zachowania wielkości fizycznych": "Zasada zachowania energii, pędu, momentu pędu oraz ładunku elektrycznego. Zasady te mówią, że w izolowanym układzie fizycznym odpowiednie wielkości pozostają stałe w czasie."
  },
  "Bazy danych": {
    "Normalizacja baz danych - jej cel i wpływ na wydajność": "Pierwsza postać normalna jest gdy każdy wiersz ma unikalny identyfikator, a każda komórka jest atomowa, czyli niepodzielna. W drugiej, gdy w pierwszej i gdy kolumny niekluczowe zależą od całego klucza głównego, a nie tylko jego podzbioru właściwego. W trzeciej, gdy w drugiej i gdy tabela nie zawiera przechodnich zależności, czyli sytuacji, w której jedna kolumna zależy od innej, która sama zależy od klucza głównego. Normalizacja to proces organizacji danych w tabelach w celu minimalizacji redundancji danych, zachowania ich spójności i eliminacji niepożądanych zależności, co ułatwia ich korzystanie z nich i utrzymanie i zazwyczaj też wydajność. Jednak nadmierna normalizacja może negatywnie wpływać na wydajność zapytań, gdy dane są rozdrobnione po tabelach.",
    "Klucze główne, obce i wyzwalacze": "Klucz główny to unikalny identyfikator rekordu w tabeli, który zapewnia jednoznaczną identyfikację. Klucz obcy to atrybut w jednej tabeli, który odwołuje się do klucza głównego w innej tabeli, umożliwiając powiązania między tabelami i zachowanie integralności referencyjnej. Wyzwalacze służą do automatyzacji. Są to procedury wykonywane automatycznie w reakcji na określone zdarzenia w bazie danych, np. wstawienie, aktualizację lub usunięcie danych.",
    "Transakcje i zasady ACID": "Transakcja to zbiór operacji wykonywanych jako jedna całości lub wcale, zapewniając spójność danych. Zasady ACID (Atomicity, Consistency, Isolation, Durability) definiują właściwości transakcji: atomowość gwarantuje, że wszystkie operacje w transakcji zostaną wykonane lub żadna; spójność zapewnia, że baza pozostaje w poprawnym stanie; izolacja chroni przed wzajemnym wpływem równoczesnych transakcji; trwałość gwarantuje, że zmiany zostaną zachowane nawet po awarii systemu."
  },
  "Inżynieria oprogramowania": {
    "Wymień znane Ci paradygmaty programowania i scharakteryzuj jeden z nich": "Są to: imperatywny, obiektowy, funkcyjny i logiczny. Paradygmat obiektowy skupia się na organizacji kodu wokół obiektów, które łączą dane i metody, umożliwiając enkapsulację, dziedziczenie i polimorfizm. Dzięki temu ułatwia tworzenie modularnego, łatwego do utrzymania i rozszerzalnego oprogramowania, co jest szczególnie przydatne w dużych projektach.",
    "Wymień i omów 6 najlepszych praktyk IO": "Najlepsze praktyki inżynierii oprogramowania to po pierwsze czysty i czytelny kod, po drugie modularność, czyli dzielenie kodu na niezależne moduły, po trzecie kontrola wersji, po czwarte automatyzacja, po piąte testowanie, czyli pisanie automatycznych testów i po szóste dokumentacja.",
    "Inżynieria wymagań: co to jest wymaganie i jakie warunki powinna spełniać dobra specyfikacja wymagań": "Wymaganie to opis funkcji lub cechy systemu, którą musi spełniać oprogramowanie, aby zaspokoić potrzeby użytkowników lub interesariuszy. Dobra specyfikacja wymagań powinna być jednoznaczna, kompletna, spójna, weryfikowalna, zrozumiała dla wszystkich stron oraz możliwa do realizacji.",
    "Co to jest refaktoryzacja, po co i kiedy ją stosować? Podaj przykład kodu 'bad smell' i możliwy sposób na poprawienie go": "Refaktoryzacja to proces poprawiania struktury i czytelności kodu bez zmiany jego zewnętrznego zachowania, stosowany w celu ułatwienia utrzymania i rozwoju oprogramowania. Przykładem 'bad smell' jest duplikacja kodu, np. powtarzające się fragmenty w różnych metodach. Można to poprawić, wydzielając powtarzający się kod do osobnej funkcji lub klasy, co zwiększa czytelność i redukuje ryzyko błędów.",
    "Po co mierzymy oprogramowanie? Co mierzymy? Wymień znane ci metryki produktu": "Mierzenie oprogramowania pozwala ocenić jego jakość, wydajność i postęp prac, co ułatwia zarządzanie projektem i podejmowanie decyzji. Mierzymy m.in. liczbę błędów, pokrycie testów, złożoność kodu, czas wykonania i zużycie zasobów. Znane metryki produktu to m.in. liczba linii kodu (LOC), złożoność obliczeniowa, wskaźnik defektów oraz metryki jakościowe jak czytelność i modularność."
  },
  "Język C++": {
    "Co to jest konstruktor i destruktor?": "Konstruktor to specjalna metoda klasy w C++, wywoływana automatycznie podczas tworzenia obiektu, służąca do inicjalizacji jego stanu. Destruktor to metoda wywoływana przy usuwaniu obiektu, odpowiedzialna za zwalnianie zasobów, takich jak pamięć czy uchwyty do plików. Oba są kluczowe dla zarządzania cyklem życia obiektów i zapewnienia poprawności działania programu.",
    "Jakie znasz typy dziedziczenia?": "W C++ wyróżniamy dziedziczenie publiczne, chronione i prywatne, które różnią się poziomem dostępu do elementów klasy bazowej w klasie pochodnej. Dziedziczenie publiczne zachowuje dostępność publicznych i chronionych członków, chronione ogranicza dostęp do nich, a prywatne ukrywa je całkowicie. Ponadto istnieje dziedziczenie wielokrotne, pozwalające klasie dziedziczyć po kilku klasach bazowych.",
    "Podaj przykłady kontenerów sekwencyjnych": "Przykłady kontenerów sekwencyjnych w C++ to std::vector, std::list, std::deque oraz std::array. Kontenery te przechowują elementy w określonej kolejności i umożliwiają ich iterację oraz modyfikację. Wybór konkretnego kontenera zależy od wymagań dotyczących szybkości dostępu, wstawiania i usuwania elementów."
  },
  "Matematyka dyskretna": {
    "Twierdzenie Halla i algorytm łączenia w pary": "Twierdzenie Halla mówi, że w dwudzielnym grafie można połączyć w rozłączne pary wierzchołki jednej części z wierzchołkami drugiej części wtedy i tylko wtedy, gdy dla każdego podzbioru w jednej części liczba sąsiadów jest co najmniej równa liczbie wierzchołków w podzbiorze. Algorytm łączenia w pary wykorzystuje to twierdzenie do znalezienia wszystkich par.",
    "Omów metody obliczania sum skończonych": "Pierwsza to bezpośrednie dodawanie kolejnych wyrazów, druga to sprawdzenie czy nie mamy przypadkiem do czynienia z ciągiem arytmetyczny lub geometrycznym i wtedy użycie wzorów, trzecia to rozbicie sumy na prostsze sumy i wyciąganie stałych w ramach danej sumy przed sumę, czwarta to odgadnięcie rozwiązania i udowodnienie przez indukcję, piąta to przeindeksowanie, szósta to zaburzenie, a siódma to zmiana kolejności sumowania w sumach wielokrotnych.",
    "Trójkąt Stirlinga (dla podziałów) i liczby Bella": "Liczby Stirlinga dla podziałów, to liczby Stirlinga drugiego rodzaju. Opisują liczbę sposobów podziału zbioru n-elementowego na k niepustych rozłącznych podzbiorów. Trójkąt Stirlinga budujemy ze wzoru, że n nad k = n minus 1 nad k minus 1 dodać k razy n minus 1 nad k. 0 nad 0 to 1, a coś większego od 1 nad 0 to 0. Liczby Bella sumują te wartości dla wszystkich k, dając łączną liczbę wszystkich możliwych podziałów zbioru."
  },
  "Grafika komputerowa": {
    "Fizjologia wzroku, prawa Grassmanna": "Fizjologia wzroku opisuje, jak ludzkie oko i mózg przetwarzają światło w obraz. Oko jest złożonym narządem, który przetwarza bodźce świetlne, a mózg interpretuje je jako kolory i kształty. Prawa Grassmanna to fundamentalne zasady kolorymetrii, które opisują addytywne mieszanie barw. Stwierdzają one, że każda barwa może być zdefiniowana przez trzy liniowo niezależne barwy (prawo trójchromatyczności), że stopniowa zmiana jednego składnika w mieszaninie barw powoduje stopniową zmianę barwy mieszanej (prawo ciągłości) oraz że barwa mieszaniny zależy jedynie od barw jej składników, a nie od ich składu widmowego (prawo addytywności).",
    "Porównanie addytywnego i substraktywnego modelu koloru": "Addytywny model koloru (np. RGB) polega na dodawaniu świateł w celu uzyskania różnych barw; jest stosowany w wyświetlaczach i monitorach, gdzie czerwony, zielony i niebieski kolor światła łączą się, tworząc biel. Natomiast substraktywny model koloru (np. CMYK) bazuje na odejmowaniu światła przez pigmenty lub barwniki; jest wykorzystywany w druku, gdzie cyjan, magenta, żółty i czarny atrament absorbują określone długości fal, dając w efekcie różne kolory, a ich połączenie daje czerń.",
    "Grafika rastrowa i grafika wektorowa": "Grafika rastrowa (bitmapowa) to obraz złożony z siatki pikseli, gdzie każdy piksel ma przypisany kolor. Jej jakość zależy od rozdzielczości i rozmiaru, a skalowanie może prowadzić do utraty ostrości. Grafika wektorowa natomiast opiera się na matematycznych opisach kształtów, linii i krzywych, co pozwala na jej skalowanie do dowolnego rozmiaru bez utraty jakości czy ostrości, co czyni ją idealną do logo i ilustracji.",
    "Metody kompresji obrazów rastrowych": "Metody kompresji obrazów rastrowych dzielą się na bezstratne i stratne. Kompresja bezstratna (np. PNG, GIF) pozwala na pełne odtworzenie oryginalnego obrazu bez utraty informacji, natomiast kompresja stratna (np. JPEG) usuwa mniej istotne dane, co prowadzi do zmniejszenia rozmiaru pliku kosztem pewnej utraty jakości. Wybór metody zależy od przeznaczenia obrazu i akceptowalnego stopnia utraty jakości.",
    "Transformacje afiniczne na płaszczyźnie": "Transformacje afiniczne na płaszczyźnie to przekształcenia geometryczne, które zachowują równoległość linii, ale niekoniecznie długości czy kąty. Obejmują one translację (przesunięcie), skalowanie (zmianę rozmiaru), obrót oraz pochylenie. Są one szeroko stosowane w grafice komputerowej do manipulacji obiektami, umożliwiając ich przemieszczanie, zmienianie rozmiaru, orientacji czy perspektywy."
  },
  "Rekonfigurowalne układy FPGA": {
    "Od czego zależy maksymalna częstotliwość działania kodu HDL na układzie FPGA. Podać wzór i go omówić": "Maksymalna częstotliwość działania kodu HDL na układzie FPGA zależy od najdłuższej ścieżki krytycznej w projekcie, czyli najdłuższego opóźnienia sygnału między dwoma kolejnymi przerzutnikami. Można to przedstawić wzorem Fmax = 1 / T_max, gdzie T_max to maksymalne opóźnienie propagacji sygnału przez ścieżkę krytyczną. Czynniki wpływające na T_max to m.in. złożoność logiki, opóźnienia bramkowe, opóźnienia routingu oraz parametry technologiczne samego układu FPGA, a także optymalizacja kodu HDL i ograniczenia czasowe w narzędziach syntezy.",
    "Omówić etapy kompilacji kodu HDL": "Najpierw analiza składniowa, potem analiza semantyczna, potem synteza, mapowanie, rozmieszczenie i routing. W syntezie kod HDL jest przekształcany w bramki logiczne; mapowanie przypisuje te bramki do zasobów FPGA (np. LUT-ów i przerzutników). Następnie, w etapie rozmieszczenia, zasoby są fizycznie rozmieszczane na układzie, a routing łączy je ze sobą za pomocą dostępnych ścieżek. Ostatnim etapem jest generowanie pliku konfiguracyjnego, który jest ładowany do układu FPGA.",
    "Opisać elementy kodu VHDL: entity, architecture, process, maszyna stanów, package": "W VHDL 'entity' definiuje interfejs modułu, czyli jego wejścia i wyjścia, natomiast 'architecture' opisuje jego wewnętrzne zachowanie lub strukturę. 'Process' to sekwencyjny blok kodu, który reaguje na zmiany sygnałów i jest wykonywany w sposób współbieżny z innymi procesami. 'Maszyna stanów' (state machine) to konstrukcja logiczna opisująca system, który przechodzi między zdefiniowanymi stanami w zależności od wejść i generuje wyjścia. 'Package' służy do grupowania i udostępniania deklaracji typów, podprogramów i komponentów między różnymi częściami projektu."
  },
  "Algorytmy i struktury danych I": {
    "Lista - definicja, sposoby reprezentowania": "Lista to liniowa struktura danych, w której elementy są uporządkowane sekwencyjnie. Może być reprezentowana na dwa główne sposoby: jako tablica (dynamiczna lub statyczna), gdzie elementy są przechowywane w ciągłym bloku pamięci, co umożliwia szybki dostęp losowy, ale utrudnia wstawianie i usuwanie; lub jako lista wiązana, gdzie każdy element (węzeł) zawiera dane i wskaźnik do następnego elementu, co ułatwia modyfikację, ale wymaga sekwencyjnego dostępu.",
    "Złożoność obliczeniowa": "Złożoność obliczeniowa to miara efektywności algorytmu, określająca, jak rośnie czas wykonania lub zużycie pamięci w zależności od rozmiaru danych wejściowych. Jest wyrażana za pomocą notacji dużego O (np. O(n), O(n log n), O(n^2)), która opisuje asymptoticzne zachowanie algorytmu dla dużych danych. Analiza złożoności pozwala na porównywanie algorytmów i wybór najefektywniejszego rozwiązania dla danego problemu.",
    "Drzewa, drzewa binarne, algorytmy przeglądania drzew: inorder, postorder, preorder": "Drzewo to hierarchiczna struktura danych składająca się z węzłów połączonych krawędziami. Drzewo binarne jest szczególnym typem drzewa, w którym każdy węzeł ma co najwyżej dwoje dzieci. Algorytmy przeglądania drzew to: inorder (lewe poddrzewo -> korzeń -> prawe poddrzewo), postorder (lewe poddrzewo -> prawe poddrzewo -> korzeń) i preorder (korzeń -> lewe poddrzewo -> prawe poddrzewo), które pozwalają na systematyczne odwiedzanie wszystkich węzłów drzewa w określonej kolejności."
  },
  "Algorytmy i struktury danych II": {
    "Grafy - definicja, sposoby reprezentowania grafu": "Graf to struktura matematyczna składająca się ze zbioru wierzchołków oraz krawędzi łączących wybrane pary tych wierzchołków, służąca do modelowania relacji pomiędzy obiektami. Najpopularniejsze sposoby reprezentowania grafów to lista sąsiedztwa (dla każdego wierzchołka przechowywana jest lista jego sąsiadów) oraz macierz sąsiedztwa (tablica dwuwymiarowa, gdzie wpisy oznaczają istnienie krawędzi między wierzchołkami). W informatyce stosuje się także inne formy zapisu, jak lista krawędzi, w zależności od potrzeb algorytmicznych i efektywności operacji.",
    "Algorytmy przeszukiwania grafu BFS i DFS": "Algorytm BFS (Breadth-First Search, przeszukiwanie wszerz) eksploruje graf poziomami, odwiedzając najpierw wszystkich sąsiadów danego wierzchołka, korzystając z kolejki FIFO; jest używany m.in. do znajdowania najkrótszej ścieżki w grafie nieskierowanym. Algorytm DFS (Depth-First Search, przeszukiwanie w głąb) eksploruje graf tak daleko, jak to możliwe wzdłuż każdego ramienia, korzystając ze stosu (jawnego lub rekurencji), co pozwala na wykrywanie cykli i składników spójności. Oba algorytmy mają złożoność czasową O(V + E), gdzie V to liczba wierzchołków, a E – liczba krawędzi.",
    "Algorytm Dijkstry": "Algorytm Dijkstry służy do wyznaczania najkrótszych ścieżek z wybranego wierzchołka do wszystkich pozostałych w grafie o nieujemnych wagach krawędzi. Działa zachłannie, iteracyjnie wybierając wierzchołek o najmniejszym znanym koszcie dojścia i aktualizując koszty dla jego sąsiadów. Wynikiem jest tablica najkrótszych odległości oraz, opcjonalnie, tablica poprzedników umożliwiająca odtworzenie ścieżek."
  },
  "Systemy operacyjne": {
    "System operacyjny i jego podstawowe zadania, najważniejsze typy struktur systemów operacyjnych i ich przykłady": "System operacyjny to oprogramowanie pośredniczące między sprzętem a użytkownikiem, zarządzające zasobami komputera. Do jego podstawowych zadań należą: zarządzanie procesami, pamięcią, plikami, urządzeniami wejścia-wyjścia oraz zapewnianie interfejsu użytkownika. Najważniejsze typy struktur to: monolityczne (np. Linux), warstwowe (np. THE), mikrojądrowe (np. Minix), klient-serwer oraz hybrydowe (np. Windows NT).",
    "Procesy i wątki w systemach operacyjnych, w tym planowanie przydziału CPU, komunikacja i synchronizacja, modele/schematy wielowątkowości": "Proces to program w trakcie wykonywania, posiadający własną przestrzeń adresową, natomiast wątek to lżejsza jednostka wykonawcza dzieląca przestrzeń procesu. Planowanie CPU polega na wyborze procesu lub wątku do wykonania, z użyciem algorytmów takich jak FCFS, Round Robin czy priorytetowe. Komunikacja międzyprocesowa realizowana jest przez mechanizmy takie jak kolejki komunikatów, pamięć współdzielona, a synchronizacja przez semafory, muteksy i monitory; istnieją modele jedno- i wielowątkowości, w których wątki mogą być zarządzane przez system operacyjny lub użytkownika.",
    "Zarządzanie pamięcią w systemach operacyjnych, w tym przestrzenie adresowe, podstawowe metody przydziału pamięci, pamięć wirtualna": "System operacyjny zarządza pamięcią, przydzielając ją procesom i zapewniając ochronę oraz wydajność. Przestrzeń adresowa to logiczny obszar adresów dostępnych dla procesu, izolowany od innych procesów. Podstawowe metody przydziału pamięci to stronicowanie, segmentacja oraz segmentacja ze stronicowaniem; pamięć wirtualna pozwala na korzystanie z większej ilości pamięci niż fizycznie dostępna, wykorzystując dysk do przechowywania nieaktywnych fragmentów.",
    "Składowe systemu plików, własności pliku i katalogu oraz podstawowe struktury i metody używane przez system operacyjny do zarządzania nimi": "System plików składa się z plików, katalogów oraz struktur zarządzających, takich jak tablice alokacji i indeksy. Plik posiada atrybuty (np. nazwa, rozmiar, prawa dostępu, czas utworzenia), katalogi umożliwiają organizację plików w hierarchię. System operacyjny zarządza plikami przez przydział miejsca (ciągły, listowy, indeksowy), zarządzanie wolną przestrzenią (np. bitmapy, listy), a katalogi mogą być implementowane jako listy liniowe, tablice haszowe czy struktury indeksowe.",
    "Ochrona i bezpieczeństwo w systemach operacyjnych, w tym domeny ochrony, macierz dostępów, zagrożenia systemów komputerowych i zapobieganie im": "Ochrona polega na kontroli dostępu do zasobów systemu przez mechanizmy takie jak domeny ochrony (grupy uprawnień), macierz dostępów (tabela określająca prawa dla kombinacji użytkownik-obiekt) oraz listy uprawnień. Zagrożenia obejmują m.in. nieautoryzowany dostęp, wirusy, ataki DoS; zapobieganie polega na stosowaniu autoryzacji, szyfrowania, polityk bezpieczeństwa i regularnych aktualizacji systemu."
  },
  "Wstęp do architektury komputerów": {
    "Elementy rozkazu maszynowego i cykl wykonywania rozkazu": "Rozkaz maszynowy składa się z kodu operacji (określającego, co wykonać), adresów operandów oraz ewentualnych bitów modyfikujących. Cykl wykonywania rozkazu obejmuje pobranie rozkazu z pamięci, dekodowanie, pobranie operandów, wykonanie operacji oraz zapis wyniku. Proces ten powtarza się dla każdego rozkazu programu.",
    "Rola przerwań": "Przerwania to mechanizm pozwalający procesorowi na reagowanie na zdarzenia asynchroniczne, takie jak zakończenie operacji wejścia-wyjścia czy błędy sprzętowe. Przerwanie powoduje wstrzymanie bieżącego programu, zapisanie jego stanu i wykonanie odpowiedniej procedury obsługi, po czym następuje powrót do przerwanego zadania. Dzięki temu system jest bardziej responsywny i może efektywnie zarządzać wieloma zadaniami.",
    "Główne cechy architektury komputerów von Neumana": "Architektura von Neumanna charakteryzuje się wspólną magistralą dla danych i rozkazów, liniową pamięcią adresowaną, jednostką arytmetyczno-logiczną (ALU), jednostką sterującą oraz możliwością przechowywania programu w pamięci. Taka organizacja umożliwia wykonywanie programów zapisanych w pamięci i jest podstawą działania większości współczesnych komputerów."
  },
  "Elektronika cyfrowa": {
    "Praca wzmacniacza operacyjnego w układach sprzężenia zwrotnego": "Wzmacniacz operacyjny najczęściej pracuje w układzie z ujemnym sprzężeniem zwrotnym, które stabilizuje jego wzmocnienie i poprawia parametry takie jak liniowość i pasmo przenoszenia. W takim układzie część sygnału wyjściowego jest odprowadzana na wejście odwracające, co powoduje, że napięcie wyjściowe jest proporcjonalne do różnicy napięć na wejściach. Dzięki temu układ działa stabilnie i przewidywalnie, a jego wzmocnienie jest określone przez elementy w pętli sprzężenia zwrotnego, np. rezystory.",
    "Złożone układy logiczne (układy kombinacyjne), typowe przykłady": "Złożone układy kombinacyjne to takie, których wyjścia zależą bezpośrednio od aktualnych stanów wejść, bez pamięci stanu. Typowe przykłady to sumatory, multipleksery, demultipleksery, kodery i dekodery oraz układy arytmetyczno-logiczne (ALU). Są one podstawą do budowy bardziej zaawansowanych systemów cyfrowych, realizując funkcje logiczne i arytmetyczne w czasie rzeczywistym.",
    "Układy sekwencyjne, typowe przykłady": "Układy sekwencyjne to układy cyfrowe, których wyjścia zależą nie tylko od bieżących wejść, ale także od historii sygnałów, czyli stanów wewnętrznych (posiadają pamięć). Typowe przykłady to przerzutniki (SR, D, JK), liczniki, rejestry przesuwne oraz maszyny stanów. Są one wykorzystywane do realizacji pamięci, sterowania i synchronizacji w systemach cyfrowych."
  },
  "Podstawy informatyki": {
    "Wymień i scharakteryzuj poznane metody programowania. Dla każdej metody podaj przykładowy problem i sposób jego rozwiązania": "Metody programowania to m.in. programowanie imperatywne, które polega na sekwencyjnym wykonywaniu instrukcji; programowanie obiektowe, które organizuje kod wokół obiektów i ich interakcji; programowanie funkcyjne, gdzie programy buduje się z funkcji bez efektów ubocznych; oraz programowanie logiczne, oparte na regułach i wnioskowaniu. Przykładowo, problem sortowania można rozwiązać imperatywnie przez algorytm sortowania bąbelkowego, obiektowo przez klasy reprezentujące kolekcje, funkcyjnie przez rekurencyjne funkcje sortujące, a logicznie przez reguły definiujące porządek.",
    "Co oznacza, że algorytm jest częściowo poprawny, ma własność STOPu oraz kiedy mówimy, że algorytm jest całkowicie poprawny?": "Algorytm jest częściowo poprawny, jeśli dla każdego wejścia, na którym się zatrzyma, wynik jest poprawny. Własność STOPu oznacza, że algorytm zatrzyma się (skończy działanie) dla każdego poprawnego wejścia. Algorytm jest całkowicie poprawny, gdy jest zarówno częściowo poprawny, jak i posiada własność STOPu, czyli zawsze kończy działanie z poprawnym wynikiem.",
    "Porównaj język maszynowy, język symboliczny i języki programowania wysokiego poziomu. Dlaczego mamy tak wiele języków programowania i co je różni?": "Język maszynowy to najniższy poziom, składający się z instrukcji bezpośrednio wykonywanych przez procesor, trudny do pisania i czytania przez ludzi. Język symboliczny (assembler) używa symboli i skrótów zamiast kodów binarnych, co ułatwia programowanie, ale nadal jest niskopoziomowy. Języki wysokiego poziomu oferują abstrakcję, są bardziej czytelne i przenośne, umożliwiając szybszy rozwój oprogramowania. Różnorodność języków wynika z różnych potrzeb, zastosowań, paradygmatów programowania i wymagań sprzętowych."
  },
  "Język C": {
    "Operacje na wskaźnikach w języku C": "Wskaźniki w C to zmienne przechowujące adresy pamięci innych zmiennych. Operacje na wskaźnikach obejmują dereferencję (odczyt lub zapis wartości pod adresem), arytmetykę wskaźników (przesuwanie adresów w tablicach) oraz przypisanie adresów. Wskaźniki umożliwiają dynamiczne zarządzanie pamięcią, przekazywanie dużych struktur do funkcji bez kopiowania oraz implementację struktur danych jak listy wiązane.",
    "Podstawowe klasy pamięci zmiennych w C": "W C zmienne mogą należeć do różnych klas pamięci: automatyczne (lokalne, tworzone na stosie), statyczne (trwają przez cały czas działania programu), zewnętrzne (widoczne w wielu plikach) oraz rejestr (sugerowane do przechowywania w rejestrach procesora dla szybszego dostępu). Klasy te wpływają na zakres widoczności, czas życia i miejsce przechowywania zmiennych.",
    "Kwalifikator 'static'": "Kwalifikator 'static' w C oznacza, że zmienna lub funkcja ma zasięg ograniczony do pliku lub bloku, ale jej czas życia trwa przez cały czas działania programu. Dla zmiennych lokalnych powoduje, że zachowują one swoją wartość między wywołaniami funkcji. Dla zmiennych globalnych ogranicza widoczność do danego pliku, co zapobiega konfliktom nazw."
  },
  "Logika i teoria mnogości": {
    "Relacje równoważności i klasy abstrakcji": "Relacja równoważności to relacja binarna na zbiorze, która jest zwrotna, symetryczna i przechodnia. Dzieli ona zbiór na rozłączne klasy abstrakcji, czyli podzbiory, których elementy są względem siebie równoważne. Każdy element zbioru należy dokładnie do jednej klasy abstrakcji, a zbiór tych klas tworzy rozkład zbioru wyjściowego.",
    "Prawa rozkładu kwantyfikatorów względem alternatywy i koniunkcji": "Kwantyfikatory ogólny i szczegółowy rozkładają się względem alternatywy i koniunkcji w następujący sposób: kwantyfikator ogólny, czyli 'dla każdego', rozkłada się na koniunkcję, co oznacza, że 'dla każdego x zachodzi P(x) i Q(x)' jest równoważne 'dla każdego x zachodzi P(x) oraz dla każdego x zachodzi Q(x)'. Natomiast kwantyfikator szczegółowy, czyli 'istnieje', rozkłada się na alternatywę, czyli 'istnieje x takie, że P(x) lub Q(x)' jest równoważne 'istnieje x takie, że P(x) lub istnieje x takie, że Q(x)'. Jednak rozkładanie kwantyfikatorów nie jest symetryczne i wymaga ostrożności, ponieważ na przykład 'dla każdego x zachodzi P(x) lub Q(x)' nie jest równoważne 'dla każdego x zachodzi P(x) lub dla każdego x zachodzi Q(x)'.",
    "Własności obrazu i przeciwobrazu sumy i przecięcia zbiorów": "Dla funkcji obraz sumy dwóch zbiorów jest równy sumie obrazów tych zbiorów, czyli obraz zbioru A połączonego z B to obraz A połączony z obrazem B. W przypadku przecięcia zbiorów obraz przecięcia jest zawarty w przecięciu obrazów, a jeśli funkcja jest różnowartościowa, to obraz przecięcia jest dokładnie równy przecięciu obrazów. Przeciwobraz sumy zbiorów jest równy sumie przeciwobrazów, a przeciwobraz przecięcia jest równy przecięciu przeciwobrazów, co oznacza, że przeciwobraz zachowuje operacje sumy i przecięcia dokładnie."
  },
  "Rachunek prawd. i statystyka": {
    "Funkcja gęstości prawdopodobieństwa i dystrybuanta i ich własności na podstawie rozkładu normalnego. Szczególne własności i rola rozkładu normalnego.": "Funkcja gęstości prawdopodobieństwa (PDF) rozkładu normalnego ma kształt dzwonu i jest symetryczna względem średniej, opisując rozkład wartości wokół tej średniej. Dystrybuanta (CDF) to funkcja rosnąca, która dla każdej wartości podaje prawdopodobieństwo, że zmienna losowa przyjmie wartość mniejszą lub równą tej wartości. Rozkład normalny jest fundamentalny w statystyce ze względu na centralne twierdzenie graniczne, które mówi, że suma wielu niezależnych zmiennych losowych dąży do rozkładu normalnego.",
    "Metody generowania liczb pseudolosowych o zadanym rozkładzie prawdopodobieństwa, w szczególności: a) generacja liczb o rozkładzie jednorodnym i b) generacja metodą odwracania dystrybuanty": "a) Generacja liczb pseudolosowych o rozkładzie jednorodnym polega na użyciu generatorów liczb losowych, które zwracają wartości równomiernie rozłożone na przedziale, np. [0,1]. b) Metoda odwracania dystrybuanty polega na wykorzystaniu odwrotności dystrybuanty rozkładu docelowego: losujemy liczbę z rozkładu jednorodnego i podstawiamy ją do odwrotności dystrybuanty, uzyskując liczbę o żądanym rozkładzie.",
    "Współczynnik korelacji dwóch zmiennych losowych X i Y - definicja, interpretacja, własności i sposób obliczania (dokładnie i estymacja)": "Współczynnik korelacji Pearsona to miara liniowej zależności między dwiema zmiennymi losowymi X i Y. Definiuje się go jako iloraz kowariancji tych zmiennych przez iloczyn ich odchyleń standardowych, czyli współczynnik korelacji r to kowariancja X i Y podzielona przez odchylenie standardowe X razy odchylenie standardowe Y. Wartość tego współczynnika mieści się w przedziale od minus jeden do jeden, gdzie jeden oznacza pełną korelację dodatnią, minus jeden pełną korelację ujemną, a zero brak korelacji liniowej. W praktyce współczynnik korelacji estymuje się na podstawie próbek danych, obliczając średnie, odchylenia standardowe i kowariancję z próby, co pozwala ocenić siłę i kierunek zależności między zmiennymi."
  },
  "Semantyczny internet": {
    "Przedstaw warstwowy model semantycznego internetu, omów krótko najważniejsze elementy i role jaką pełnią": "Model semantycznego internetu składa się z kilku warstw: warstwa URI zapewnia unikalne identyfikatory zasobów; warstwa XML umożliwia strukturalizację danych; RDF definiuje model danych w postaci trójek; OWL pozwala na wyrażanie ontologii i reguł; warstwa logiki i reguł umożliwia wnioskowanie; a warstwa aplikacji wykorzystuje te dane do inteligentnych usług. Każda warstwa buduje na poprzedniej, umożliwiając maszynom rozumienie i przetwarzanie informacji w sposób semantyczny.",
    "Przedstaw ogólną strukturę trójek RDF, co oznaczają poszczególne elementy, jak wygląda ich model grafowy": "Trójka RDF składa się z podmiotu, orzeczenia (predykatu) i dopełnienia, które razem wyrażają fakt lub relację. Podmiot to zasób, o którym mowa, orzeczenie określa typ relacji, a dopełnienie jest wartością lub innym zasobem. Model grafowy RDF reprezentuje trójki jako skierowane krawędzie (predykaty) łączące wierzchołki (zasoby), co pozwala na łatwe łączenie i przeszukiwanie danych semantycznych.",
    "Co to jest ontologia, z czego się składa, jakie ma możliwości, jak się ją buduje": "Ontologia to formalny model wiedzy opisujący pojęcia, ich właściwości i relacje w danej dziedzinie. Składa się z klas (pojęć), właściwości (atrybutów i relacji), instancji oraz aksjomatów definiujących reguły i ograniczenia. Ontologie umożliwiają wspólne rozumienie danych, automatyczne wnioskowanie i integrację informacji; buduje się je za pomocą języków takich jak OWL, często wspierając proces narzędziami do edycji i walidacji."
  },
  "Sieci komputerowe": {
    "Omów działanie protokołu ARP, Proxy-ARP i zastosowanie bramy domyślnej": "Protokół ARP (Address Resolution Protocol) służy do mapowania adresów IP na fizyczne adresy MAC w sieci lokalnej, umożliwiając komunikację na poziomie warstwy 2. Proxy-ARP pozwala routerowi odpowiadać na zapytania ARP w imieniu innych urządzeń, co umożliwia komunikację między różnymi segmentami sieci bez zmiany konfiguracji sieciowej. Brama domyślna to adres IP routera skonfigurowany na hoście, który służy do wysyłania pakietów poza lokalną podsieć; jeśli adres docelowy nie należy do lokalnej sieci, pakiet jest kierowany do bramy domyślnej, której adres MAC jest pozyskiwany przez ARP.",
    "Podziel prefiks IPv4 klasy C 192.168.1.0/24 na podsieci ze stałą i zmienną maską": "Podział sieci 192.168.1.0/24 na podsieci ze stałą maską (np. /26) pozwala utworzyć 4 podsieci po 64 adresy każda, z których 62 są dostępne dla hostów. Przy zmiennej długości maski (VLSM) można tworzyć podsieci o różnej wielkości, np. /25 dla większej podsieci (128 adresów) i /27 dla mniejszych (32 adresy), co pozwala efektywniej wykorzystać adresy IP zgodnie z potrzebami. Podział taki wymaga dokładnego planowania i odpowiedniej konfiguracji routerów, aby zapewnić prawidłową trasę i komunikację między podsieciami.",
    "Omów funkcje protokołu TCP i inicjalizację połączenia TCP": "Protokół TCP zapewnia dostosowanie ilości transmitowanych danych do możliwości dobiorcy, oczkiwanie na potwierdzenie odebrania każdego pakietu i retransmisję jeśli coś nie wyszło, kontrolę błędów przez sumy kontrolne, kolejność dostarczania pakietów, zabezpieczenie przed duplikacją. Inicjalizacja połączenia TCP odbywa się za pomocą trzyetapowego uścisku dłoni: klient wysyła segment SYN, serwer odpowiada SYN-ACK, a klient potwierdza ACK, co ustanawia połączenie."
  },
  "Wstęp do telekomunikacji": {
    "Omów rodzaje komutacji": "W telekomunikacji wyróżniamy komutację obwodów, gdzie dla połączenia rezerwowany jest dedykowany kanał na czas trwania sesji, oraz komutację pakietów, gdzie dane są dzielone na pakiety przesyłane niezależnie przez sieć. Komutacja obwodów zapewnia stałą jakość połączenia, ale jest mniej efektywna w wykorzystaniu zasobów, natomiast komutacja pakietów jest bardziej elastyczna i efektywna, ale może powodować opóźnienia i zmienność jakości.",
    "Co to jest sygnalizacja w sieciach telekomunikacyjnych i jakie są jej rodzaje?": "Sygnalizacja to wymiana informacji kontrolnych między elementami sieci telekomunikacyjnej, umożliwiająca ustanawianie, utrzymanie i zakończenie połączeń. Wyróżnia się sygnalizację kanałową (in-band), gdzie sygnały przesyłane są tym samym kanałem co dane, oraz sygnalizację poza kanałową (out-of-band), gdzie sygnały sterujące przesyłane są oddzielnym kanałem, co zwiększa efektywność i niezawodność.",
    "Jak dzielimy usługi telekomunikacyjne?": "Usługi telekomunikacyjne dzielimy na usługi transmisji danych (np. Internet, VPN), usługi głosowe (telefonia tradycyjna i VoIP), usługi multimedialne (wideo, streaming) oraz usługi wartości dodanej (np. SMS, usługi lokalizacyjne). Podział ten uwzględnia różne wymagania jakościowe, protokoły i technologie realizujące poszczególne usługi."
  },
  "Teoria jęz. form. i metody translacji": {
    "Hierarchia Chomsky'ego gramatyk ciągowych i automaty potrzebne do rozpoznawania języków generowanych przez te gramatyki": "Hierarchia Chomsky'ego dzieli gramatyki na cztery klasy: typu 0 (bez ograniczeń, rozpoznawane przez maszyny Turinga), typu 1 (gramatyki kontekstowe, rozpoznawane przez liniowo ograniczone automaty), typu 2 (gramatyki bezkontekstowe, rozpoznawane przez automaty ze stosem) oraz typu 3 (gramatyki regularne, rozpoznawane przez automaty skończenie stanowe). Każdy poziom hierarchii odpowiada klasie języków o rosnącej złożoności i mocy wyrazu.",
    "Równoważność deterministycznych i niedeterministycznych automatów skończenie stanowych": "Deterministyczne automaty skończenie stanowe (DFA) i niedeterministyczne automaty skończenie stanowe (NFA) rozpoznają ten sam zbiór języków regularnych. Każdy NFA można przekształcić w równoważny DFA, choć liczba stanów może wzrosnąć wykładniczo. Ta równoważność jest podstawą analizy i optymalizacji automatów w teorii języków formalnych.",
    "Definicja i rodzaje parserów": "Parser to program lub algorytm analizujący strukturę składniową tekstu zgodnie z określoną gramatyką. Rodzaje parserów obejmują parsery top-down (np. rekursywny zstępujący), bottom-up (np. LR, LALR) oraz parsery oparte na analizie predykcyjnej. Wybór parsera zależy od rodzaju gramatyki i wymagań dotyczących efektywności oraz obsługi błędów."
  },
  "Systemy pomiarowo kontrolne": {
    "Podać najważniejsze różnice w kodowaniu liczb binarnych w notacji U1 i U2": "Kod U1 (uzupełnień do jedności) reprezentuje liczby ujemne przez negację bitów liczby dodatniej, co powoduje istnienie dwóch reprezentacji zera (+0 i -0). Kod U2 (uzupełnień do dwóch) tworzy liczbę przeciwną przez negację bitów i dodanie 1, dzięki czemu występuje tylko jedno zero i operacje arytmetyczne są prostsze. Ponadto zakres liczb w U2 jest asymetryczny, a kod ten jest powszechnie stosowany w nowoczesnych systemach cyfrowych ze względu na efektywność obliczeń.",
    "Omówić ogólną zasadę działania przetwornika ADC zbudowanego w oparciu o przetwornik DAC": "Przetwornik ADC oparty na DAC działa na zasadzie porównywania sygnału analogowego z sygnałem generowanym przez DAC, który jest sterowany przez cyfrowy licznik lub algorytm. Proces polega na iteracyjnym dostosowywaniu wartości cyfrowej sterującej DAC, aż wyjście DAC zrówna się z sygnałem wejściowym ADC, co pozwala na określenie cyfrowej reprezentacji sygnału analogowego. Metoda ta jest stosowana m.in. w przetwornikach typu sukcesywnego przybliżania.",
    "Omówić sposób transmisji danych przez interfejs USB": "Interfejs USB przesyła dane w pakietach przez magistralę szeregową z wykorzystaniem protokołu host-master, gdzie host zarządza komunikacją z urządzeniami. Dane są przesyłane w ramach ram czasowych, z podziałem na różne typy transferów: kontrolne, izochroniczne, przerwaniowe i masowe, dostosowane do wymagań aplikacji. USB zapewnia również zasilanie urządzeń oraz mechanizmy wykrywania i konfiguracji podłączonych urządzeń, co umożliwia łatwą i elastyczną komunikację."
  },
  "Wprowadzenie do analityki danych": {
    "Omów  metodę regresji liniowej jako przykład  techniki znajdowania parametrycznego  modelu danych opisywanego przy pomocy listy zmiennych charakterystycznych": "Regresja liniowa to metoda statystyczna służąca do modelowania zależności między zmienną zależną a jedną lub wieloma zmiennymi niezależnymi, zakładająca liniową formę modelu. Polega na wyznaczeniu parametrów modelu (współczynników) minimalizujących sumę kwadratów różnic między wartościami obserwowanymi a przewidywanymi przez model. Metoda ta pozwala na interpretację wpływu poszczególnych zmiennych oraz prognozowanie wartości na podstawie danych wejściowych.",
    "Problem klasyfikacji obiektów. Jakie znasz techniki": "Klasyfikacja obiektów polega na przypisaniu obiektów do określonych klas na podstawie ich cech. Popularne techniki to m.in. klasyfikatory bayesowskie, drzewa decyzyjne, maszyny wektorów nośnych (SVM), sieci neuronowe oraz metody oparte na najbliższych sąsiadach (k-NN). Wybór metody zależy od charakterystyki danych, wymagań dokładności i interpretowalności modelu.",
    "Problem grupowania obiektów. Jakie znasz algorytmy grupujące (klastrujące)": "Grupowanie (klastrowanie) polega na podziale zbioru obiektów na grupy (klastry) tak, aby obiekty w jednej grupie były do siebie podobne, a różniły się od obiektów w innych grupach. Popularne algorytmy to k-średnich (k-means), hierarchiczne (agglomeracyjne i dzielące), DBSCAN oraz algorytmy oparte na modelach probabilistycznych. Wybór algorytmu zależy od rodzaju danych, liczby klastrów i oczekiwanej struktury grup."
  }
}